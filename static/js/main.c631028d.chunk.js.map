{"version":3,"sources":["components/input-amount.js","components/additional-info.js","components/get-rate-btn.js","components/share-bar.js","components/tooltip.js","components/current-rate-data.js","App.js","serviceWorker.js","index.js"],"names":["InputAmount","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectText","bind","assertThisInitialized","input","document","getElementById","label","focus","select","react_default","a","createElement","className","for","icon","id","type","onChange","change","value","onClick","Component","AdditionalInfo","hist_rate","riseFallPercentage","GetRateButton","tabindex","update","ShareBar","href","class","rel","Tooltip","style","styling","CurrentRateData","rate","date","App","state","gbp","eur","hideLatest","getRate","handleEvent","_this2","days","months","xmlr","XMLHttpRequest","open","onreadystatechange","status","readyState","myJson","JSON","parse","responseText","rates","EUR","setState","latest","setTimeout","Date","sys","concat","getDay","getDate","getMonth","getFullYear","historicXmlr","toFixed","hist_perc","send","blur","e","test","target","revealTooltip","opacity","top","tooltip","current_rate_data","input_amount","symbol","additional_info","get_rate_btn","share_bar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c631028d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass InputAmount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectText = this.selectText.bind(this);\r\n    }\r\n\r\n    selectText() {\r\n    \tconst input = document.getElementById(this.props.label);\r\n    \tinput.focus();\r\n    \tinput.select();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \t<span className=\"inputs\">\r\n        \t\t<label for={this.props.label}><i className={this.props.icon}></i></label>\r\n        \t\t<input id={this.props.label} type=\"text\" onChange={this.props.change} value={this.props.value} onClick={this.selectText}/>\r\n        \t</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputAmount;\r\n","import React, { Component } from 'react';\r\n\r\nclass AdditionalInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n\r\n        \t<div id=\"additional-info\">\r\n        \t\t<p>Last year's rate: <span className=\"text-bold\">{this.props.hist_rate}</span>\r\n        \t\t<br />\r\n        \t\tThat's a <span className=\"text-bold\">{this.props.riseFallPercentage}%</span> change over a year.</p>\r\n\r\n        \t</div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default AdditionalInfo;\r\n","import React, { Component } from 'react';\r\n\r\nclass GetRateButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a id=\"button-getrate\" tabindex=\"0\" onClick={this.props.update}>Refresh Rate</a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetRateButton;\r\n","import React, { Component } from 'react';\r\n\r\nclass ShareBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"section-share\">\r\n            \t<span id=\"text-shareheading\">Share this app!</span>\r\n            \t<a className=\"button-share\" href=\"https://www.facebook.com/dialog/share?app_id=386595788635458&display=popup&href=https%3A%2F%2Fdardinodavid.github.io%2Fsimple-gbp-euro-converter%2F&redirect_uri=https%3A%2F%2Fdardinodavid.github.io%2Fsimple-gbp-euro-converter%2F\"><i class=\"fab fa-facebook\" /></a>\r\n            \t<a className=\"button-share\" rel=\"canonical\" href=\"https://twitter.com/intent/tweet?text=Simple%20GBP%20Euro%20Converter\"><i class=\"fab fa-twitter-square\" /></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Tooltip extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <span id=\"text-latesttooltip\" style={this.props.styling}>This is the latest rate available.</span>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Tooltip;\r\n","import React, { Component } from 'react';\r\n\r\nclass CurrentRateData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \t<div id=\"section-top\">\r\n            \t<span>Exchange rate: <span className=\"text-bold\">{this.props.rate}</span></span>\r\n            \t<span id=\"text-lastupdate\">Last update: <span className=\"text-bold\">{this.props.date}</span></span>\r\n        \t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentRateData;\r\n","import React, { Component } from 'react';\nimport InputAmount from './components/input-amount';\nimport AdditionalInfo from './components/additional-info';\nimport GetRateButton from './components/get-rate-btn';\nimport ShareBar from './components/share-bar';\nimport Tooltip from './components/tooltip';\nimport CurrentRateData from './components/current-rate-data';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { gbp: 0, eur: 0, hideLatest: true }\n    this.getRate();\n    this.handleEvent = this.handleEvent.bind(this);\n    this.getRate = this.getRate.bind(this);\n  }\n\n  getRate(){\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                  'October', 'November', 'December'];\n    var xmlr = new XMLHttpRequest();\n    xmlr.open('GET', 'https://api.openrates.io/latest?base=GBP', true)\n    xmlr.onreadystatechange = ()=>{\n      if(xmlr.status == 200 && xmlr.readyState == 4){\n        var myJson = JSON.parse(xmlr.responseText)\n        if(myJson.rates.EUR == this.state.rate){\n          this.setState({ latest: \"This is the latest rate available.\", hideLatest: false});\n          setTimeout(() =>{ this.setState({ latest: \"\", hideLatest: true}) }, 2000);\n        }\n        else{\n          var date = new Date(myJson.date)\n          this.setState({ rate: myJson.rates.EUR, sys: date, date: `${days[date.getDay()]} ${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}` });\n          var historicXmlr = new XMLHttpRequest();\n          historicXmlr.open('GET', `https://api.openrates.io/${this.state.sys.getFullYear() -1}-${this.state.sys.getMonth() + 1}-${this.state.sys.getDate()}?base=GBP`, true)\n          historicXmlr.onreadystatechange = ()=>{\n            if(historicXmlr.status == 200 && historicXmlr.readyState == 4){\n              var myJson = JSON.parse(historicXmlr.responseText)\n              var rate = ((this.state.rate - myJson.rates.EUR) / (this.state.rate / 100)).toFixed(2)\n              rate = rate > 0 ? `+${rate}` : rate;\n              this.setState({ hist_rate: myJson.rates.EUR, hist_perc: rate })\n            }\n          }\n          historicXmlr.send();\n        }\n      }\n    }\n    xmlr.send();\n    setTimeout(()=>{\n    document.getElementById('button-getrate').blur();\n  },3000)\n  }\n\n  handleEvent(e){\n    var regex = /^\\d*\\.*\\d{0,2}$/;\n    if(regex.test(e.target.value)){\n      if(e.target.id == 'GBP'){\n        this.setState({ gbp: e.target.value, eur: (e.target.value * this.state.rate).toFixed(2) })\n      }else{ this.setState({ eur: e.target.value, gbp: (e.target.value / this.state.rate).toFixed(2) })}\n    }\n  }\n\n  render() {\n\n    var revealTooltip = this.state.hideLatest ? {opacity: 0} : {opacity: 1, top: '50%'}; \n    return (\n      <div className=\"App\">\n        <Tooltip styling={revealTooltip} />\n        <div id=\"App-Content\">\n          <h1 id=\"text-heading\"><span id=\"text-heading-smaller\">Simple</span>GBP Euro Converter</h1>\n          <CurrentRateData date={this.state.date} rate={this.state.rate}/>\n          <div id=\"section-inputs\"> \n            <InputAmount label=\"GBP\" icon=\"icon fas fa-pound-sign\" symbol=\"£\" value={this.state.gbp} change={this.handleEvent} />\n            <InputAmount label=\"EUR\" icon=\"icon fas fa-euro-sign\" symbol=\"€\" value={this.state.eur} change={this.handleEvent} />\n          </div>\n          <div id=\"section-bottom\">\n            <AdditionalInfo riseFallPercentage={this.state.hist_perc} hist_rate={this.state.hist_rate} latest={this.state.latest}/>\n            <GetRateButton update={this.getRate} />\n            <ShareBar />\n          </div>\n          <span id=\"text-credit\">&copy; 2019 David Andrews</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}